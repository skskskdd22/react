{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/root/react/front/pages/index.js\";\nimport React, { useEffect, useCallback, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PostForm from '../containers/PostForm';\nimport PostCard from '../containers/PostCard';\nimport { LOAD_MAIN_POSTS_REQUEST } from '../reducers/post';\n\nvar Home = function Home() {\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector2.mainPosts,\n      hasMorePost = _useSelector2.hasMorePost;\n\n  var dispatch = useDispatch();\n  var countRef = useRef([]);\n  var onScroll = useCallback(function () {\n    if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n      if (hasMorePost) {\n        var lastId = mainPosts[mainPosts.length - 1].id;\n\n        if (!countRef.current.includes(lastId)) {\n          dispatch({\n            type: LOAD_MAIN_POSTS_REQUEST,\n            lastId: lastId\n          });\n          countRef.current.push(lastId);\n        }\n      }\n    }\n  }, [hasMorePost, mainPosts.length]);\n  useEffect(function () {\n    window.addEventListener('scroll', onScroll);\n    return function () {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [mainPosts.length]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, me && React.createElement(PostForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), mainPosts.map(function (c) {\n    return React.createElement(PostCard, {\n      key: c.id,\n      post: c,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    });\n  }));\n};\n\nHome.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(context) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(_Object$keys(context));\n            context.store.dispatch({\n              type: LOAD_MAIN_POSTS_REQUEST\n            });\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default Home;","map":{"version":3,"sources":["/root/react/front/pages/index.js"],"names":["React","useEffect","useCallback","useRef","useSelector","useDispatch","PostForm","PostCard","LOAD_MAIN_POSTS_REQUEST","Home","state","user","me","post","mainPosts","hasMorePost","dispatch","countRef","onScroll","window","scrollY","document","documentElement","clientHeight","scrollHeight","lastId","length","id","current","includes","type","push","addEventListener","removeEventListener","map","c","getInitialProps","context","console","log","store"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,WAA3B,EAAwCC,MAAxC,QAAsD,OAAtD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,uBAAT,QAAwC,kBAAxC;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA,qBACFL,WAAW,CAAC,UAAAM,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAV;AAAA,GAAN,CADT;AAAA,MACTC,EADS,gBACTA,EADS;;AAAA,sBAEkBR,WAAW,CAAC,UAAAM,KAAK;AAAA,WAAIA,KAAK,CAACG,IAAV;AAAA,GAAN,CAF7B;AAAA,MAETC,SAFS,iBAETA,SAFS;AAAA,MAEEC,WAFF,iBAEEA,WAFF;;AAGjB,MAAMC,QAAQ,GAAGX,WAAW,EAA5B;AACA,MAAMY,QAAQ,GAAGd,MAAM,CAAC,EAAD,CAAvB;AAEA,MAAMe,QAAQ,GAAGhB,WAAW,CAAC,YAAM;AACjC,QAAIiB,MAAM,CAACC,OAAP,GAAiBC,QAAQ,CAACC,eAAT,CAAyBC,YAA1C,GAAyDF,QAAQ,CAACC,eAAT,CAAyBE,YAAzB,GAAwC,GAArG,EAA0G;AACxG,UAAIT,WAAJ,EAAiB;AACf,YAAMU,MAAM,GAAGX,SAAS,CAACA,SAAS,CAACY,MAAV,GAAmB,CAApB,CAAT,CAAgCC,EAA/C;;AACA,YAAI,CAACV,QAAQ,CAACW,OAAT,CAAiBC,QAAjB,CAA0BJ,MAA1B,CAAL,EAAwC;AACtCT,UAAAA,QAAQ,CAAC;AACPc,YAAAA,IAAI,EAAEtB,uBADC;AAEPiB,YAAAA,MAAM,EAANA;AAFO,WAAD,CAAR;AAIAR,UAAAA,QAAQ,CAACW,OAAT,CAAiBG,IAAjB,CAAsBN,MAAtB;AACD;AACF;AACF;AACF,GAb2B,EAazB,CAACV,WAAD,EAAcD,SAAS,CAACY,MAAxB,CAbyB,CAA5B;AAeAzB,EAAAA,SAAS,CAAC,YAAM;AACdkB,IAAAA,MAAM,CAACa,gBAAP,CAAwB,QAAxB,EAAkCd,QAAlC;AACA,WAAO,YAAM;AACXC,MAAAA,MAAM,CAACc,mBAAP,CAA2B,QAA3B,EAAqCf,QAArC;AACD,KAFD;AAGD,GALQ,EAKN,CAACJ,SAAS,CAACY,MAAX,CALM,CAAT;AAOA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGd,EAAE,IAAI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADT,EAEGE,SAAS,CAACoB,GAAV,CAAc,UAACC,CAAD,EAAO;AACpB,WACE,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,CAAC,CAACR,EAAjB;AAAqB,MAAA,IAAI,EAAEQ,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD,GAJA,CAFH,CADF;AAUD,CAtCD;;AAwCA1B,IAAI,CAAC2B,eAAL;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAuB,iBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AACrBC,YAAAA,OAAO,CAACC,GAAR,CAAY,aAAYF,OAAZ,CAAZ;AACAA,YAAAA,OAAO,CAACG,KAAR,CAAcxB,QAAd,CAAuB;AACrBc,cAAAA,IAAI,EAAEtB;AADe,aAAvB;;AAFqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAAA;AAAA;AAAA;AAAA;;AAOA,eAAeC,IAAf","sourcesContent":["import React, { useEffect, useCallback, useRef } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport PostForm from '../containers/PostForm';\r\nimport PostCard from '../containers/PostCard';\r\nimport { LOAD_MAIN_POSTS_REQUEST } from '../reducers/post';\r\n\r\nconst Home = () => {\r\n  const { me } = useSelector(state => state.user);\r\n  const { mainPosts, hasMorePost } = useSelector(state => state.post);\r\n  const dispatch = useDispatch();\r\n  const countRef = useRef([]);\r\n\r\n  const onScroll = useCallback(() => {\r\n    if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\r\n      if (hasMorePost) {\r\n        const lastId = mainPosts[mainPosts.length - 1].id;\r\n        if (!countRef.current.includes(lastId)) {\r\n          dispatch({\r\n            type: LOAD_MAIN_POSTS_REQUEST,\r\n            lastId,\r\n          });\r\n          countRef.current.push(lastId);\r\n        }\r\n      }\r\n    }\r\n  }, [hasMorePost, mainPosts.length]);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('scroll', onScroll);\r\n    return () => {\r\n      window.removeEventListener('scroll', onScroll);\r\n    };\r\n  }, [mainPosts.length]);\r\n\r\n  return (\r\n    <div>\r\n      {me && <PostForm />}\r\n      {mainPosts.map((c) => {\r\n        return (\r\n          <PostCard key={c.id} post={c} />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nHome.getInitialProps = async (context) => {\r\n  console.log(Object.keys(context));\r\n  context.store.dispatch({\r\n    type: LOAD_MAIN_POSTS_REQUEST,\r\n  });\r\n};\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}