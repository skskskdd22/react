{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/root/react/front/components/PostImages.js\";\nimport React, { useCallback, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon } from 'antd';\nimport ImagesZoom from './ImagesZoom';\n{\n  /*이미지를 가지고와서 클라이언트에 뷰로 보여줄 수 있게 한다.\r\n   이미지가 3개 이상이면 더보기 클릭해서 더 볼 수 있게해준다.*/\n}\n\nvar PostImages = function PostImages(_ref) {\n  var images = _ref.images;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showImagesZoom = _useState2[0],\n      setShowImagesZoom = _useState2[1];\n\n  var onZoom = useCallback(function () {\n    setShowImagesZoom(true);\n  }, []);\n  var onClose = useCallback(function () {\n    setShowImagesZoom(false);\n  }, []);\n\n  if (images.length === 1) {\n    return React.createElement(React.Fragment, null, React.createElement(\"img\", {\n      src: \"http://49.247.193.211:3065/uploads/\".concat(images[0].png),\n      onClick: onZoom,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }), showImagesZoom && React.createElement(ImagesZoom, {\n      images: images,\n      onClose: onClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }));\n  }\n\n  if (images.length === 2) {\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"http://49.247.193.211:3065/uploads/\".concat(images[0].png),\n      width: \"50%\",\n      onClick: onZoom,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      src: \"http://49.247.193.211:3065/uploads/\".concat(images[1].png),\n      width: \"50%\",\n      onClick: onZoom,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    })), showImagesZoom && React.createElement(ImagesZoom, {\n      images: images,\n      onClose: onClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }));\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: \"http://49.247.193.211:3065/\".concat(images[0].src),\n    width: \"50%\",\n    onClick: onZoom,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      display: 'inline-block',\n      width: '50%',\n      textAlign: 'center',\n      verticalAlign: 'middle'\n    },\n    onClick: onZoom,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    type: \"plus\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), images.length - 1, \"\\uAC1C\\uC758 \\uC0AC\\uC9C4 \\uB354\\uBCF4\\uAE30\")), showImagesZoom && React.createElement(ImagesZoom, {\n    images: images,\n    onClose: onClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }));\n};\n\nPostImages.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.shape({\n    src: PropTypes.string\n  })).isRequired\n};\nexport default PostImages;","map":{"version":3,"sources":["/root/react/front/components/PostImages.js"],"names":["React","useCallback","useState","PropTypes","Icon","ImagesZoom","PostImages","images","showImagesZoom","setShowImagesZoom","onZoom","onClose","length","png","src","display","width","textAlign","verticalAlign","propTypes","arrayOf","shape","string","isRequired"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Icon } from 'antd';\r\nimport ImagesZoom from './ImagesZoom';\r\n\r\n\r\n{/*이미지를 가지고와서 클라이언트에 뷰로 보여줄 수 있게 한다.\r\n  이미지가 3개 이상이면 더보기 클릭해서 더 볼 수 있게해준다.*/}\r\nconst PostImages = ({ images }) => {\r\n  const [showImagesZoom, setShowImagesZoom] = useState(false);\r\n\r\n  const onZoom = useCallback(() => {\r\n    setShowImagesZoom(true);\r\n  }, []);\r\n\r\n  const onClose = useCallback(() => {\r\n    setShowImagesZoom(false);\r\n  }, []);\r\n\r\n  if (images.length === 1) {\r\n    return (\r\n      <>\r\n        <img src={`http://49.247.193.211:3065/uploads/${images[0].png}`} onClick={onZoom} />\r\n        {showImagesZoom && <ImagesZoom images={images} onClose={onClose} />}\r\n      </>\r\n    );\r\n  }\r\n  if (images.length === 2) {\r\n    return (\r\n      <>\r\n        <div>\r\n          <img src={`http://49.247.193.211:3065/uploads/${images[0].png}`} width=\"50%\" onClick={onZoom} />\r\n          <img src={`http://49.247.193.211:3065/uploads/${images[1].png}`} width=\"50%\" onClick={onZoom} />\r\n        </div>\r\n        {showImagesZoom && <ImagesZoom images={images} onClose={onClose} />}\r\n      </>\r\n  );\r\n  }\r\n  return (\r\n    <>\r\n    <div>\r\n      <img src={`http://49.247.193.211:3065/${images[0].src}`} width=\"50%\" onClick={onZoom} />\r\n      <div style={{ display: 'inline-block', width: '50%', textAlign: 'center', verticalAlign: 'middle' }} onClick={onZoom}>\r\n        <Icon type=\"plus\" />\r\n        <br />\r\n        {images.length - 1}\r\n        개의 사진 더보기\r\n      </div>\r\n    </div>\r\n      {showImagesZoom && <ImagesZoom images={images} onClose={onClose} />}\r\n    </>\r\n  );\r\n};\r\n\r\nPostImages.propTypes = {\r\n  images: PropTypes.arrayOf(PropTypes.shape({\r\n    src: PropTypes.string,\r\n  })).isRequired,\r\n};\r\n\r\nexport default PostImages;\r\n"]},"metadata":{},"sourceType":"module"}