{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/root/react/front/pages/hashtag.js\";\nimport React, { useCallback, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { LOAD_HASHTAG_POSTS_REQUEST } from '../reducers/post';\nimport PostCard from '../containers/PostCard';\n\nvar Hashtag = function Hashtag(_ref) {\n  var tag = _ref.tag;\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector.mainPosts,\n      hasMorePost = _useSelector.hasMorePost;\n\n  var onScroll = useCallback(function () {\n    if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n      if (hasMorePost) {\n        dispatch({\n          type: LOAD_HASHTAG_POSTS_REQUEST,\n          lastId: mainPosts[mainPosts.length - 1].id,\n          data: tag\n        });\n      }\n    }\n  }, [hasMorePost, mainPosts.length]);\n  useEffect(function () {\n    window.addEventListener('scroll', onScroll);\n    return function () {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [mainPosts.length]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, mainPosts.map(function (c) {\n    return React.createElement(PostCard, {\n      key: c.id,\n      post: c,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    });\n  }));\n};\n\nHashtag.propTypes = {\n  tag: PropTypes.string.isRequired\n};\n\nHashtag.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(context) {\n    var tag;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            tag = context.query.tag;\n            console.log('hashtag getInitialProps', tag);\n            context.store.dispatch({\n              type: LOAD_HASHTAG_POSTS_REQUEST,\n              data: tag\n            });\n            return _context.abrupt(\"return\", {\n              tag: tag\n            });\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default Hashtag;","map":{"version":3,"sources":["/root/react/front/pages/hashtag.js"],"names":["React","useCallback","useEffect","PropTypes","useDispatch","useSelector","LOAD_HASHTAG_POSTS_REQUEST","PostCard","Hashtag","tag","dispatch","state","post","mainPosts","hasMorePost","onScroll","window","scrollY","document","documentElement","clientHeight","scrollHeight","type","lastId","length","id","data","addEventListener","removeEventListener","map","c","propTypes","string","isRequired","getInitialProps","context","query","console","log","store"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,QAA8C,OAA9C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,0BAAT,QAA2C,kBAA3C;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAAa;AAAA,MAAVC,GAAU,QAAVA,GAAU;AAC3B,MAAMC,QAAQ,GAAGN,WAAW,EAA5B;;AAD2B,qBAGQC,WAAW,CAAC,UAAAM,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAV;AAAA,GAAN,CAHnB;AAAA,MAGnBC,SAHmB,gBAGnBA,SAHmB;AAAA,MAGRC,WAHQ,gBAGRA,WAHQ;;AAK3B,MAAMC,QAAQ,GAAGd,WAAW,CAAC,YAAM;AACjC,QAAIe,MAAM,CAACC,OAAP,GAAiBC,QAAQ,CAACC,eAAT,CAAyBC,YAA1C,GAAyDF,QAAQ,CAACC,eAAT,CAAyBE,YAAzB,GAAwC,GAArG,EAA0G;AACxG,UAAIP,WAAJ,EAAiB;AACfJ,QAAAA,QAAQ,CAAC;AACPY,UAAAA,IAAI,EAAEhB,0BADC;AAEPiB,UAAAA,MAAM,EAAEV,SAAS,CAACA,SAAS,CAACW,MAAV,GAAmB,CAApB,CAAT,CAAgCC,EAFjC;AAGPC,UAAAA,IAAI,EAAEjB;AAHC,SAAD,CAAR;AAKD;AACF;AACF,GAV2B,EAUzB,CAACK,WAAD,EAAcD,SAAS,CAACW,MAAxB,CAVyB,CAA5B;AAYAtB,EAAAA,SAAS,CAAC,YAAM;AACdc,IAAAA,MAAM,CAACW,gBAAP,CAAwB,QAAxB,EAAkCZ,QAAlC;AACA,WAAO,YAAM;AACXC,MAAAA,MAAM,CAACY,mBAAP,CAA2B,QAA3B,EAAqCb,QAArC;AACD,KAFD;AAGD,GALQ,EAKN,CAACF,SAAS,CAACW,MAAX,CALM,CAAT;AAOA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGX,SAAS,CAACgB,GAAV,CAAc,UAAAC,CAAC;AAAA,WACd,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,CAAC,CAACL,EAAjB;AAAqB,MAAA,IAAI,EAAEK,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADc;AAAA,GAAf,CADH,CADF;AAOD,CA/BD;;AAiCAtB,OAAO,CAACuB,SAAR,GAAoB;AAClBtB,EAAAA,GAAG,EAAEN,SAAS,CAAC6B,MAAV,CAAiBC;AADJ,CAApB;;AAIAzB,OAAO,CAAC0B,eAAR;AAAA;AAAA;AAAA;AAAA;AAAA,2BAA0B,iBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAClB1B,YAAAA,GADkB,GACZ0B,OAAO,CAACC,KAAR,CAAc3B,GADF;AAExB4B,YAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuC7B,GAAvC;AACA0B,YAAAA,OAAO,CAACI,KAAR,CAAc7B,QAAd,CAAuB;AACrBY,cAAAA,IAAI,EAAEhB,0BADe;AAErBoB,cAAAA,IAAI,EAAEjB;AAFe,aAAvB;AAHwB,6CAOjB;AAAEA,cAAAA,GAAG,EAAHA;AAAF,aAPiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA1B;;AAAA;AAAA;AAAA;AAAA;;AAUA,eAAeD,OAAf","sourcesContent":["import React, { useCallback, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { LOAD_HASHTAG_POSTS_REQUEST } from '../reducers/post';\r\nimport PostCard from '../containers/PostCard';\r\n\r\nconst Hashtag = ({ tag }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { mainPosts, hasMorePost } = useSelector(state => state.post);\r\n\r\n  const onScroll = useCallback(() => {\r\n    if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\r\n      if (hasMorePost) {\r\n        dispatch({\r\n          type: LOAD_HASHTAG_POSTS_REQUEST,\r\n          lastId: mainPosts[mainPosts.length - 1].id,\r\n          data: tag,\r\n        });\r\n      }\r\n    }\r\n  }, [hasMorePost, mainPosts.length]);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('scroll', onScroll);\r\n    return () => {\r\n      window.removeEventListener('scroll', onScroll);\r\n    };\r\n  }, [mainPosts.length]);\r\n\r\n  return (\r\n    <div>\r\n      {mainPosts.map(c => (\r\n        <PostCard key={c.id} post={c} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nHashtag.propTypes = {\r\n  tag: PropTypes.string.isRequired,\r\n};\r\n\r\nHashtag.getInitialProps = async (context) => {\r\n  const tag = context.query.tag;\r\n  console.log('hashtag getInitialProps', tag);\r\n  context.store.dispatch({\r\n    type: LOAD_HASHTAG_POSTS_REQUEST,\r\n    data: tag,\r\n  });\r\n  return { tag };\r\n};\r\n\r\nexport default Hashtag;\r\n"]},"metadata":{},"sourceType":"module"}