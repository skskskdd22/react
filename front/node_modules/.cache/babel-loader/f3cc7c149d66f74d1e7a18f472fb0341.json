{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/root/react/front/pages/signup.js\";\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Avatar, Card } from 'antd';\nimport { LOAD_USER_POSTS_REQUEST } from '../reducers/post';\nimport { LOAD_USER_REQUEST } from '../reducers/user';\nimport PostCard from '../containers/PostCard';\n\nvar User = function User() {\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector.mainPosts;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.user;\n  }),\n      userInfo = _useSelector2.userInfo;\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, userInfo ? React.createElement(Card, {\n    actions: [React.createElement(\"div\", {\n      key: \"twit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \"\\uC9F9\\uC9F9\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }), userInfo.Posts), React.createElement(\"div\", {\n      key: \"following\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"\\uD314\\uB85C\\uC789\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }), userInfo.Followings), React.createElement(\"div\", {\n      key: \"follower\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"\\uD314\\uB85C\\uC6CC\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), userInfo.Followers)],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(Card.Meta, {\n    avatar: React.createElement(Avatar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, userInfo.nickname[0]),\n    title: userInfo.nickname,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  })) : null, mainPosts.map(function (c) {\n    return React.createElement(PostCard, {\n      key: c.id,\n      post: c,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    });\n  }));\n};\n\nUser.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(context) {\n    var id;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            id = _parseInt(context.query.id, 10);\n            console.log('user getInitialProps', id);\n            context.store.dispatch({\n              type: LOAD_USER_REQUEST,\n              data: id\n            });\n            context.store.dispatch({\n              type: LOAD_USER_POSTS_REQUEST,\n              data: id\n            });\n            return _context.abrupt(\"return\", {\n              id: id\n            });\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default User;","map":{"version":3,"sources":["/root/react/front/pages/signup.js"],"names":["React","useSelector","Avatar","Card","LOAD_USER_POSTS_REQUEST","LOAD_USER_REQUEST","PostCard","User","state","post","mainPosts","user","userInfo","Posts","Followings","Followers","nickname","map","c","id","getInitialProps","context","query","console","log","store","dispatch","type","data"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,MAA7B;AACA,SAASC,uBAAT,QAAwC,kBAAxC;AACA,SAASC,iBAAT,QAAkC,kBAAlC;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA,qBACKN,WAAW,CAAC,UAAAO,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAV;AAAA,GAAN,CADhB;AAAA,MACTC,SADS,gBACTA,SADS;;AAAA,sBAEIT,WAAW,CAAC,UAAAO,KAAK;AAAA,WAAIA,KAAK,CAACG,IAAV;AAAA,GAAN,CAFf;AAAA,MAETC,QAFS,iBAETA,QAFS;;AAIjB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,QAAQ,GAEL,oBAAC,IAAD;AACE,IAAA,OAAO,EAAE,CACP;AAAK,MAAA,GAAG,EAAC,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGGA,QAAQ,CAACC,KAHZ,CADO,EAMP;AAAK,MAAA,GAAG,EAAC,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGGD,QAAQ,CAACE,UAHZ,CANO,EAWP;AAAK,MAAA,GAAG,EAAC,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGGF,QAAQ,CAACG,SAHZ,CAXO,CADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAmBE,oBAAC,IAAD,CAAM,IAAN;AACE,IAAA,MAAM,EAAE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASH,QAAQ,CAACI,QAAT,CAAkB,CAAlB,CAAT,CADV;AAEE,IAAA,KAAK,EAAEJ,QAAQ,CAACI,QAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBF,CAFK,GA2BL,IA5BN,EA6BGN,SAAS,CAACO,GAAV,CAAc,UAAAC,CAAC;AAAA,WACd,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,CAAC,CAACC,EAAjB;AAAqB,MAAA,IAAI,EAAED,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADc;AAAA,GAAf,CA7BH,CADF;AAmCD,CAvCD;;AAyCAX,IAAI,CAACa,eAAL;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAuB,iBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACfF,YAAAA,EADe,GACV,UAASE,OAAO,CAACC,KAAR,CAAcH,EAAvB,EAA2B,EAA3B,CADU;AAErBI,YAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCL,EAApC;AACAE,YAAAA,OAAO,CAACI,KAAR,CAAcC,QAAd,CAAuB;AACrBC,cAAAA,IAAI,EAAEtB,iBADe;AAErBuB,cAAAA,IAAI,EAAET;AAFe,aAAvB;AAIAE,YAAAA,OAAO,CAACI,KAAR,CAAcC,QAAd,CAAuB;AACrBC,cAAAA,IAAI,EAAEvB,uBADe;AAErBwB,cAAAA,IAAI,EAAET;AAFe,aAAvB;AAPqB,6CAWd;AAAEA,cAAAA,EAAE,EAAFA;AAAF,aAXc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAAA;AAAA;AAAA;AAAA;;AAcA,eAAeZ,IAAf","sourcesContent":["import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Avatar, Card } from 'antd';\r\nimport { LOAD_USER_POSTS_REQUEST } from '../reducers/post';\r\nimport { LOAD_USER_REQUEST } from '../reducers/user';\r\nimport PostCard from '../containers/PostCard';\r\n\r\nconst User = () => {\r\n  const { mainPosts } = useSelector(state => state.post);\r\n  const { userInfo } = useSelector(state => state.user);\r\n\r\n  return (\r\n    <div>\r\n      {userInfo\r\n        ? (\r\n          <Card\r\n            actions={[\r\n              <div key=\"twit\">\r\n                짹짹\r\n                <br />\r\n                {userInfo.Posts}\r\n              </div>,\r\n              <div key=\"following\">\r\n                팔로잉\r\n                <br />\r\n                {userInfo.Followings}\r\n              </div>,\r\n              <div key=\"follower\">\r\n                팔로워\r\n                <br />\r\n                {userInfo.Followers}\r\n              </div>,\r\n            ]}\r\n          >\r\n            <Card.Meta\r\n              avatar={<Avatar>{userInfo.nickname[0]}</Avatar>}\r\n              title={userInfo.nickname}\r\n            />\r\n          </Card>\r\n        )\r\n        : null}\r\n      {mainPosts.map(c => (\r\n        <PostCard key={c.id} post={c} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nUser.getInitialProps = async (context) => {\r\n  const id = parseInt(context.query.id, 10);\r\n  console.log('user getInitialProps', id);\r\n  context.store.dispatch({\r\n    type: LOAD_USER_REQUEST,\r\n    data: id,\r\n  });\r\n  context.store.dispatch({\r\n    type: LOAD_USER_POSTS_REQUEST,\r\n    data: id,\r\n  });\r\n  return { id };\r\n};\r\n\r\nexport default User;\r\n"]},"metadata":{},"sourceType":"module"}